// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using clusterNaomi.Api;

#nullable disable

namespace clusterNaomi.Api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241129220608_AddStoreRelationToIcecream")]
    partial class AddStoreRelationToIcecream
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("clusterNaomi.Shared.Entities.Icecream", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flavour")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("StoreId1")
                        .HasColumnType("int");

                    b.Property<int>("StoreId2")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Flavour")
                        .IsUnique();

                    b.HasIndex("StoreId");

                    b.HasIndex("StoreId1");

                    b.ToTable("Icecreams");
                });

            modelBuilder.Entity("clusterNaomi.Shared.Entities.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("clusterNaomi.Shared.Entities.Icecream", b =>
                {
                    b.HasOne("clusterNaomi.Shared.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("clusterNaomi.Shared.Entities.Store", null)
                        .WithMany("Icecreams")
                        .HasForeignKey("StoreId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("clusterNaomi.Shared.Entities.Store", b =>
                {
                    b.Navigation("Icecreams");
                });
#pragma warning restore 612, 618
        }
    }
}
